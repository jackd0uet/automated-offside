{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"gpu","dataSources":[],"dockerImageVersionId":30919,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"%pip install ultralytics roboflow\n!pip install -q git+https://github.com/roboflow/sports.git\n!pip install -q supervision>=0.23.0\n\nfrom ultralytics import YOLO\nimport os\nimport shutil\n\nfrom kaggle_secrets import UserSecretsClient\nfrom roboflow import Roboflow\n\n\nfrom sports.annotators.soccer import draw_pitch\nfrom sports.configs.soccer import SoccerPitchConfiguration\n\nimport supervision as sv\n\nimport cv2\nimport numpy as np","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2025-03-07T14:12:56.070563Z","iopub.execute_input":"2025-03-07T14:12:56.070855Z","iopub.status.idle":"2025-03-07T14:13:08.508462Z","shell.execute_reply.started":"2025-03-07T14:12:56.070834Z","shell.execute_reply":"2025-03-07T14:13:08.507325Z"}},"outputs":[{"name":"stdout","text":"Requirement already satisfied: ultralytics in /usr/local/lib/python3.10/dist-packages (8.3.85)\nRequirement already satisfied: roboflow in /usr/local/lib/python3.10/dist-packages (1.1.54)\nRequirement already satisfied: numpy<=2.1.1,>=1.23.0 in /usr/local/lib/python3.10/dist-packages (from ultralytics) (1.26.4)\nRequirement already satisfied: matplotlib>=3.3.0 in /usr/local/lib/python3.10/dist-packages (from ultralytics) (3.7.5)\nRequirement already satisfied: opencv-python>=4.6.0 in /usr/local/lib/python3.10/dist-packages (from ultralytics) (4.10.0.84)\nRequirement already satisfied: pillow>=7.1.2 in /usr/local/lib/python3.10/dist-packages (from ultralytics) (11.0.0)\nRequirement already satisfied: pyyaml>=5.3.1 in /usr/local/lib/python3.10/dist-packages (from ultralytics) (6.0.2)\nRequirement already satisfied: requests>=2.23.0 in /usr/local/lib/python3.10/dist-packages (from ultralytics) (2.32.3)\nRequirement already satisfied: scipy>=1.4.1 in /usr/local/lib/python3.10/dist-packages (from ultralytics) (1.13.1)\nRequirement already satisfied: torch>=1.8.0 in /usr/local/lib/python3.10/dist-packages (from ultralytics) (2.5.1+cu121)\nRequirement already satisfied: torchvision>=0.9.0 in /usr/local/lib/python3.10/dist-packages (from ultralytics) (0.20.1+cu121)\nRequirement already satisfied: tqdm>=4.64.0 in /usr/local/lib/python3.10/dist-packages (from ultralytics) (4.67.1)\nRequirement already satisfied: psutil in /usr/local/lib/python3.10/dist-packages (from ultralytics) (5.9.5)\nRequirement already satisfied: py-cpuinfo in /usr/local/lib/python3.10/dist-packages (from ultralytics) (9.0.0)\nRequirement already satisfied: pandas>=1.1.4 in /usr/local/lib/python3.10/dist-packages (from ultralytics) (2.2.3)\nRequirement already satisfied: seaborn>=0.11.0 in /usr/local/lib/python3.10/dist-packages (from ultralytics) (0.12.2)\nRequirement already satisfied: ultralytics-thop>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from ultralytics) (2.0.14)\nRequirement already satisfied: certifi in /usr/local/lib/python3.10/dist-packages (from roboflow) (2025.1.31)\nRequirement already satisfied: idna==3.7 in /usr/local/lib/python3.10/dist-packages (from roboflow) (3.7)\nRequirement already satisfied: cycler in /usr/local/lib/python3.10/dist-packages (from roboflow) (0.12.1)\nRequirement already satisfied: kiwisolver>=1.3.1 in /usr/local/lib/python3.10/dist-packages (from roboflow) (1.4.7)\nRequirement already satisfied: opencv-python-headless==4.10.0.84 in /usr/local/lib/python3.10/dist-packages (from roboflow) (4.10.0.84)\nRequirement already satisfied: python-dateutil in /usr/local/lib/python3.10/dist-packages (from roboflow) (2.9.0.post0)\nRequirement already satisfied: python-dotenv in /usr/local/lib/python3.10/dist-packages (from roboflow) (1.0.1)\nRequirement already satisfied: six in /usr/local/lib/python3.10/dist-packages (from roboflow) (1.17.0)\nRequirement already satisfied: urllib3>=1.26.6 in /usr/local/lib/python3.10/dist-packages (from roboflow) (2.3.0)\nRequirement already satisfied: requests-toolbelt in /usr/local/lib/python3.10/dist-packages (from roboflow) (1.0.0)\nRequirement already satisfied: filetype in /usr/local/lib/python3.10/dist-packages (from roboflow) (1.2.0)\nRequirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.3.0->ultralytics) (1.3.1)\nRequirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.3.0->ultralytics) (4.55.3)\nRequirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.3.0->ultralytics) (24.2)\nRequirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.3.0->ultralytics) (3.2.0)\nRequirement already satisfied: mkl_fft in /usr/local/lib/python3.10/dist-packages (from numpy<=2.1.1,>=1.23.0->ultralytics) (1.3.8)\nRequirement already satisfied: mkl_random in /usr/local/lib/python3.10/dist-packages (from numpy<=2.1.1,>=1.23.0->ultralytics) (1.2.4)\nRequirement already satisfied: mkl_umath in /usr/local/lib/python3.10/dist-packages (from numpy<=2.1.1,>=1.23.0->ultralytics) (0.1.1)\nRequirement already satisfied: mkl in /usr/local/lib/python3.10/dist-packages (from numpy<=2.1.1,>=1.23.0->ultralytics) (2025.0.1)\nRequirement already satisfied: tbb4py in /usr/local/lib/python3.10/dist-packages (from numpy<=2.1.1,>=1.23.0->ultralytics) (2022.0.0)\nRequirement already satisfied: mkl-service in /usr/local/lib/python3.10/dist-packages (from numpy<=2.1.1,>=1.23.0->ultralytics) (2.4.1)\nRequirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas>=1.1.4->ultralytics) (2025.1)\nRequirement already satisfied: tzdata>=2022.7 in /usr/local/lib/python3.10/dist-packages (from pandas>=1.1.4->ultralytics) (2025.1)\nRequirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests>=2.23.0->ultralytics) (3.4.1)\nRequirement already satisfied: filelock in /usr/local/lib/python3.10/dist-packages (from torch>=1.8.0->ultralytics) (3.17.0)\nRequirement already satisfied: typing-extensions>=4.8.0 in /usr/local/lib/python3.10/dist-packages (from torch>=1.8.0->ultralytics) (4.12.2)\nRequirement already satisfied: networkx in /usr/local/lib/python3.10/dist-packages (from torch>=1.8.0->ultralytics) (3.4.2)\nRequirement already satisfied: jinja2 in /usr/local/lib/python3.10/dist-packages (from torch>=1.8.0->ultralytics) (3.1.4)\nRequirement already satisfied: fsspec in /usr/local/lib/python3.10/dist-packages (from torch>=1.8.0->ultralytics) (2024.12.0)\nRequirement already satisfied: sympy==1.13.1 in /usr/local/lib/python3.10/dist-packages (from torch>=1.8.0->ultralytics) (1.13.1)\nRequirement already satisfied: mpmath<1.4,>=1.1.0 in /usr/local/lib/python3.10/dist-packages (from sympy==1.13.1->torch>=1.8.0->ultralytics) (1.3.0)\nRequirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.10/dist-packages (from jinja2->torch>=1.8.0->ultralytics) (3.0.2)\nRequirement already satisfied: intel-openmp>=2024 in /usr/local/lib/python3.10/dist-packages (from mkl->numpy<=2.1.1,>=1.23.0->ultralytics) (2024.2.0)\nRequirement already satisfied: tbb==2022.* in /usr/local/lib/python3.10/dist-packages (from mkl->numpy<=2.1.1,>=1.23.0->ultralytics) (2022.0.0)\nRequirement already satisfied: tcmlib==1.* in /usr/local/lib/python3.10/dist-packages (from tbb==2022.*->mkl->numpy<=2.1.1,>=1.23.0->ultralytics) (1.2.0)\nRequirement already satisfied: intel-cmplr-lib-rt in /usr/local/lib/python3.10/dist-packages (from mkl_umath->numpy<=2.1.1,>=1.23.0->ultralytics) (2024.2.0)\nRequirement already satisfied: intel-cmplr-lib-ur==2024.2.0 in /usr/local/lib/python3.10/dist-packages (from intel-openmp>=2024->mkl->numpy<=2.1.1,>=1.23.0->ultralytics) (2024.2.0)\nNote: you may need to restart the kernel to use updated packages.\n  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","output_type":"stream"}],"execution_count":26},{"cell_type":"code","source":"user_secrets = UserSecretsClient()\nGITHUB_TOKEN = user_secrets.get_secret(\"GITHUB_TOKEN\")\nROBOFLOW_API_KEY = user_secrets.get_secret(\"ROBOFLOW_API_KEY\")\n\nGITHUB_USERNAME = 'jackd0uet'\nGITHUB_REPO = 'automated-offside'","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-07T13:53:24.958203Z","iopub.execute_input":"2025-03-07T13:53:24.958497Z","iopub.status.idle":"2025-03-07T13:53:25.295839Z","shell.execute_reply.started":"2025-03-07T13:53:24.958476Z","shell.execute_reply":"2025-03-07T13:53:25.295207Z"}},"outputs":[],"execution_count":3},{"cell_type":"code","source":"!git clone https://jackd0uet:$GITHUB_TOKEN@github.com/jackd0uet/automated-offside.git\n\nHOME = os.getcwd()\nprint(HOME)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-07T13:53:36.470972Z","iopub.execute_input":"2025-03-07T13:53:36.471315Z","iopub.status.idle":"2025-03-07T13:54:15.922226Z","shell.execute_reply.started":"2025-03-07T13:53:36.471293Z","shell.execute_reply":"2025-03-07T13:54:15.921177Z"}},"outputs":[{"name":"stdout","text":"Cloning into 'automated-offside'...\nremote: Enumerating objects: 1131, done.\u001b[K\nremote: Counting objects: 100% (4/4), done.\u001b[K\nremote: Compressing objects: 100% (4/4), done.\u001b[K\nremote: Total 1131 (delta 1), reused 0 (delta 0), pack-reused 1127 (from 5)\u001b[K\nReceiving objects: 100% (1131/1131), 1.60 GiB | 59.17 MiB/s, done.\nResolving deltas: 100% (96/96), done.\nUpdating files: 100% (1561/1561), done.\n/kaggle/working\n","output_type":"stream"}],"execution_count":4},{"cell_type":"code","source":"weights_directory = f\"{HOME}/automated-offside/yolo-checkpoints/pitch-segmentation/2025-03-05_15-58-19\"\nzip_name = \"/weights.zip\"\narchive_format = \"zip\"\n\nos.chdir(weights_directory)\n\nshutil.unpack_archive(weights_directory + zip_name, weights_directory, archive_format)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-07T13:56:38.433400Z","iopub.execute_input":"2025-03-07T13:56:38.433731Z","iopub.status.idle":"2025-03-07T13:56:39.180281Z","shell.execute_reply.started":"2025-03-07T13:56:38.433695Z","shell.execute_reply":"2025-03-07T13:56:39.179550Z"}},"outputs":[],"execution_count":7},{"cell_type":"code","source":"model = YOLO(f\"{weights_directory}/best.pt\")\ntest_dir = f\"{HOME}/automated-offside/dataset/Labelled-football-scenes-21/test/images/218_jpg.rf.5b6f7df52540e43a57b11d68697be3f8.jpg\"","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-07T13:57:53.768491Z","iopub.execute_input":"2025-03-07T13:57:53.768792Z","iopub.status.idle":"2025-03-07T13:57:53.938481Z","shell.execute_reply.started":"2025-03-07T13:57:53.768773Z","shell.execute_reply":"2025-03-07T13:57:53.937781Z"}},"outputs":[],"execution_count":9},{"cell_type":"code","source":"results = model.predict(test_dir)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-07T13:58:07.638093Z","iopub.execute_input":"2025-03-07T13:58:07.638387Z","iopub.status.idle":"2025-03-07T13:58:11.661079Z","shell.execute_reply.started":"2025-03-07T13:58:07.638367Z","shell.execute_reply":"2025-03-07T13:58:11.660403Z"}},"outputs":[{"name":"stdout","text":"\nimage 1/1 /kaggle/working/automated-offside/dataset/Labelled-football-scenes-21/test/images/218_jpg.rf.5b6f7df52540e43a57b11d68697be3f8.jpg: 384x640 1 half, 1 penalty, 114.5ms\nSpeed: 10.6ms preprocess, 114.5ms inference, 306.8ms postprocess per image at shape (1, 3, 384, 640)\n","output_type":"stream"}],"execution_count":10},{"cell_type":"code","source":"yolo_classes = list(model.names.values())\nclas_ids = [yolo_classes.index(clas) for clas in yolo_classes]","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-07T14:10:30.734167Z","iopub.execute_input":"2025-03-07T14:10:30.734542Z","iopub.status.idle":"2025-03-07T14:10:30.738825Z","shell.execute_reply.started":"2025-03-07T14:10:30.734517Z","shell.execute_reply":"2025-03-07T14:10:30.738014Z"}},"outputs":[],"execution_count":21},{"cell_type":"code","source":"image = cv2.imread(test_dir)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-07T14:12:17.231626Z","iopub.execute_input":"2025-03-07T14:12:17.231875Z","iopub.status.idle":"2025-03-07T14:12:17.248154Z","shell.execute_reply.started":"2025-03-07T14:12:17.231853Z","shell.execute_reply":"2025-03-07T14:12:17.247381Z"}},"outputs":[],"execution_count":24},{"cell_type":"code","source":"for result in results:\n    for mask, box in zip(result.masks.xy, result.boxes):\n        points = np.int32([mask])\n        color_num = clas_ids.index(int(box.cls[0]))\n        cv2.fillPoly(image, points, colors[color_num])","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-07T14:12:44.094413Z","iopub.execute_input":"2025-03-07T14:12:44.094716Z","iopub.status.idle":"2025-03-07T14:12:44.125429Z","shell.execute_reply.started":"2025-03-07T14:12:44.094687Z","shell.execute_reply":"2025-03-07T14:12:44.124358Z"}},"outputs":[{"traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-25-b8b8a1c7c723>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mresult\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mresults\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m     \u001b[0;32mfor\u001b[0m \u001b[0mmask\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbox\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mzip\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mresult\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmasks\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mxy\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mresult\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mboxes\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m         \u001b[0mpoints\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mint32\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mmask\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      4\u001b[0m         \u001b[0mcolor_num\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mclas_ids\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mindex\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mbox\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcls\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m         \u001b[0mcv2\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfillPoly\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mimage\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mpoints\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcolors\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mcolor_num\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'np' is not defined"],"ename":"NameError","evalue":"name 'np' is not defined","output_type":"error"}],"execution_count":25},{"cell_type":"code","source":"config = SoccerPitchConfiguration()\n\nannotated_frame = draw_pitch(config)\n\nsv.plot_image(annotated_frame)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-07T14:06:10.816850Z","iopub.execute_input":"2025-03-07T14:06:10.817240Z","iopub.status.idle":"2025-03-07T14:06:11.124403Z","shell.execute_reply.started":"2025-03-07T14:06:10.817208Z","shell.execute_reply":"2025-03-07T14:06:11.123533Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 1200x1200 with 1 Axes>","image/png":"\n"},"metadata":{}}],"execution_count":18},{"cell_type":"code","source":"print(config.vertices)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-07T14:06:48.406557Z","iopub.execute_input":"2025-03-07T14:06:48.406918Z","iopub.status.idle":"2025-03-07T14:06:48.411551Z","shell.execute_reply.started":"2025-03-07T14:06:48.406888Z","shell.execute_reply":"2025-03-07T14:06:48.410833Z"}},"outputs":[{"name":"stdout","text":"[(0, 0), (0, 1450.0), (0, 2584.0), (0, 4416.0), (0, 5550.0), (0, 7000), (550, 2584.0), (550, 4416.0), (1100, 3500.0), (2015, 1450.0), (2015, 2584.0), (2015, 4416.0), (2015, 5550.0), (6000.0, 0), (6000.0, 2585.0), (6000.0, 4415.0), (6000.0, 7000), (9985, 1450.0), (9985, 2584.0), (9985, 4416.0), (9985, 5550.0), (10900, 3500.0), (11450, 2584.0), (11450, 4416.0), (12000, 0), (12000, 1450.0), (12000, 2584.0), (12000, 4416.0), (12000, 5550.0), (12000, 7000), (5085.0, 3500.0), (6915.0, 3500.0)]\n","output_type":"stream"}],"execution_count":19},{"cell_type":"code","source":"print(boxes)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-07T14:07:26.894896Z","iopub.execute_input":"2025-03-07T14:07:26.895234Z","iopub.status.idle":"2025-03-07T14:07:26.901418Z","shell.execute_reply.started":"2025-03-07T14:07:26.895209Z","shell.execute_reply":"2025-03-07T14:07:26.900478Z"}},"outputs":[{"name":"stdout","text":"ultralytics.engine.results.Boxes object with attributes:\n\ncls: array([          0,           1], dtype=float32)\nconf: array([    0.96163,     0.88434], dtype=float32)\ndata: array([[     7.6611,      218.28,        1920,        1080,     0.96163,           0],\n       [     1014.2,      303.47,      1917.1,      766.13,     0.88434,           1]], dtype=float32)\nid: None\nis_track: False\norig_shape: (1080, 1920)\nshape: (2, 6)\nxywh: array([[     963.83,      649.14,      1912.3,      861.72],\n       [     1465.7,       534.8,      902.89,      462.66]], dtype=float32)\nxywhn: array([[      0.502,     0.60105,     0.99601,     0.79789],\n       [    0.76338,     0.49518,     0.47025,     0.42838]], dtype=float32)\nxyxy: array([[     7.6611,      218.28,        1920,        1080],\n       [     1014.2,      303.47,      1917.1,      766.13]], dtype=float32)\nxyxyn: array([[  0.0039902,     0.20211,           1,           1],\n       [    0.52825,     0.28099,     0.99851,     0.70938]], dtype=float32)\n","output_type":"stream"}],"execution_count":20},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null}]}